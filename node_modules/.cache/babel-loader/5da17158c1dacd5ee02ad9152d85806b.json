{"ast":null,"code":"/**\n * Copyright (c) 2013 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\n\nfunction Deque(capacity) {\n  this._capacity = getCapacity(capacity);\n  this._length = 0;\n  this._front = 0;\n\n  if (isArray(capacity)) {\n    var len = capacity.length;\n\n    for (var i = 0; i < len; ++i) {\n      this[i] = capacity[i];\n    }\n\n    this._length = len;\n  }\n}\n\nDeque.prototype.toArray = function Deque$toArray() {\n  var len = this._length;\n  var ret = new Array(len);\n  var front = this._front;\n  var capacity = this._capacity;\n\n  for (var j = 0; j < len; ++j) {\n    ret[j] = this[front + j & capacity - 1];\n  }\n\n  return ret;\n};\n\nDeque.prototype.push = function Deque$push(item) {\n  var argsLength = arguments.length;\n  var length = this._length;\n\n  if (argsLength > 1) {\n    var capacity = this._capacity;\n\n    if (length + argsLength > capacity) {\n      for (var i = 0; i < argsLength; ++i) {\n        this._checkCapacity(length + 1);\n\n        var j = this._front + length & this._capacity - 1;\n        this[j] = arguments[i];\n        length++;\n        this._length = length;\n      }\n\n      return length;\n    } else {\n      var j = this._front;\n\n      for (var i = 0; i < argsLength; ++i) {\n        this[j + length & capacity - 1] = arguments[i];\n        j++;\n      }\n\n      this._length = length + argsLength;\n      return length + argsLength;\n    }\n  }\n\n  if (argsLength === 0) return length;\n\n  this._checkCapacity(length + 1);\n\n  var i = this._front + length & this._capacity - 1;\n  this[i] = item;\n  this._length = length + 1;\n  return length + 1;\n};\n\nDeque.prototype.pop = function Deque$pop() {\n  var length = this._length;\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var i = this._front + length - 1 & this._capacity - 1;\n  var ret = this[i];\n  this[i] = void 0;\n  this._length = length - 1;\n  return ret;\n};\n\nDeque.prototype.shift = function Deque$shift() {\n  var length = this._length;\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var front = this._front;\n  var ret = this[front];\n  this[front] = void 0;\n  this._front = front + 1 & this._capacity - 1;\n  this._length = length - 1;\n  return ret;\n};\n\nDeque.prototype.unshift = function Deque$unshift(item) {\n  var length = this._length;\n  var argsLength = arguments.length;\n\n  if (argsLength > 1) {\n    var capacity = this._capacity;\n\n    if (length + argsLength > capacity) {\n      for (var i = argsLength - 1; i >= 0; i--) {\n        this._checkCapacity(length + 1);\n\n        var capacity = this._capacity;\n        var j = (this._front - 1 & capacity - 1 ^ capacity) - capacity;\n        this[j] = arguments[i];\n        length++;\n        this._length = length;\n        this._front = j;\n      }\n\n      return length;\n    } else {\n      var front = this._front;\n\n      for (var i = argsLength - 1; i >= 0; i--) {\n        var j = (front - 1 & capacity - 1 ^ capacity) - capacity;\n        this[j] = arguments[i];\n        front = j;\n      }\n\n      this._front = front;\n      this._length = length + argsLength;\n      return length + argsLength;\n    }\n  }\n\n  if (argsLength === 0) return length;\n\n  this._checkCapacity(length + 1);\n\n  var capacity = this._capacity;\n  var i = (this._front - 1 & capacity - 1 ^ capacity) - capacity;\n  this[i] = item;\n  this._length = length + 1;\n  this._front = i;\n  return length + 1;\n};\n\nDeque.prototype.peekBack = function Deque$peekBack() {\n  var length = this._length;\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var index = this._front + length - 1 & this._capacity - 1;\n  return this[index];\n};\n\nDeque.prototype.peekFront = function Deque$peekFront() {\n  if (this._length === 0) {\n    return void 0;\n  }\n\n  return this[this._front];\n};\n\nDeque.prototype.get = function Deque$get(index) {\n  var i = index;\n\n  if (i !== (i | 0)) {\n    return void 0;\n  }\n\n  var len = this._length;\n\n  if (i < 0) {\n    i = i + len;\n  }\n\n  if (i < 0 || i >= len) {\n    return void 0;\n  }\n\n  return this[this._front + i & this._capacity - 1];\n};\n\nDeque.prototype.isEmpty = function Deque$isEmpty() {\n  return this._length === 0;\n};\n\nDeque.prototype.clear = function Deque$clear() {\n  var len = this._length;\n  var front = this._front;\n  var capacity = this._capacity;\n\n  for (var j = 0; j < len; ++j) {\n    this[front + j & capacity - 1] = void 0;\n  }\n\n  this._length = 0;\n  this._front = 0;\n};\n\nDeque.prototype.toString = function Deque$toString() {\n  return this.toArray().toString();\n};\n\nDeque.prototype.valueOf = Deque.prototype.toString;\nDeque.prototype.removeFront = Deque.prototype.shift;\nDeque.prototype.removeBack = Deque.prototype.pop;\nDeque.prototype.insertFront = Deque.prototype.unshift;\nDeque.prototype.insertBack = Deque.prototype.push;\nDeque.prototype.enqueue = Deque.prototype.push;\nDeque.prototype.dequeue = Deque.prototype.shift;\nDeque.prototype.toJSON = Deque.prototype.toArray;\nObject.defineProperty(Deque.prototype, \"length\", {\n  get: function () {\n    return this._length;\n  },\n  set: function () {\n    throw new RangeError(\"\");\n  }\n});\n\nDeque.prototype._checkCapacity = function Deque$_checkCapacity(size) {\n  if (this._capacity < size) {\n    this._resizeTo(getCapacity(this._capacity * 1.5 + 16));\n  }\n};\n\nDeque.prototype._resizeTo = function Deque$_resizeTo(capacity) {\n  var oldCapacity = this._capacity;\n  this._capacity = capacity;\n  var front = this._front;\n  var length = this._length;\n\n  if (front + length > oldCapacity) {\n    var moveItemsCount = front + length & oldCapacity - 1;\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n  }\n};\n\nvar isArray = Array.isArray;\n\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n  for (var j = 0; j < len; ++j) {\n    dst[j + dstIndex] = src[j + srcIndex];\n    src[j + srcIndex] = void 0;\n  }\n}\n\nfunction pow2AtLeast(n) {\n  n = n >>> 0;\n  n = n - 1;\n  n = n | n >> 1;\n  n = n | n >> 2;\n  n = n | n >> 4;\n  n = n | n >> 8;\n  n = n | n >> 16;\n  return n + 1;\n}\n\nfunction getCapacity(capacity) {\n  if (typeof capacity !== \"number\") {\n    if (isArray(capacity)) {\n      capacity = capacity.length;\n    } else {\n      return 16;\n    }\n  }\n\n  return pow2AtLeast(Math.min(Math.max(16, capacity), 1073741824));\n}\n\nmodule.exports = Deque;","map":{"version":3,"sources":["/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/node_modules/double-ended-queue/js/deque.js"],"names":["Deque","capacity","_capacity","getCapacity","_length","_front","isArray","len","length","i","prototype","toArray","Deque$toArray","ret","Array","front","j","push","Deque$push","item","argsLength","arguments","_checkCapacity","pop","Deque$pop","shift","Deque$shift","unshift","Deque$unshift","peekBack","Deque$peekBack","index","peekFront","Deque$peekFront","get","Deque$get","isEmpty","Deque$isEmpty","clear","Deque$clear","toString","Deque$toString","valueOf","removeFront","removeBack","insertFront","insertBack","enqueue","dequeue","toJSON","Object","defineProperty","set","RangeError","Deque$_checkCapacity","size","_resizeTo","Deque$_resizeTo","oldCapacity","moveItemsCount","arrayMove","src","srcIndex","dst","dstIndex","pow2AtLeast","n","Math","min","max","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\nfunction Deque(capacity) {\n    this._capacity = getCapacity(capacity);\n    this._length = 0;\n    this._front = 0;\n    if (isArray(capacity)) {\n        var len = capacity.length;\n        for (var i = 0; i < len; ++i) {\n            this[i] = capacity[i];\n        }\n        this._length = len;\n    }\n}\n\nDeque.prototype.toArray = function Deque$toArray() {\n    var len = this._length;\n    var ret = new Array(len);\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        ret[j] = this[(front + j) & (capacity - 1)];\n    }\n    return ret;\n};\n\nDeque.prototype.push = function Deque$push(item) {\n    var argsLength = arguments.length;\n    var length = this._length;\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = 0; i < argsLength; ++i) {\n                this._checkCapacity(length + 1);\n                var j = (this._front + length) & (this._capacity - 1);\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n            }\n            return length;\n        }\n        else {\n            var j = this._front;\n            for (var i = 0; i < argsLength; ++i) {\n                this[(j + length) & (capacity - 1)] = arguments[i];\n                j++;\n            }\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = item;\n    this._length = length + 1;\n    return length + 1;\n};\n\nDeque.prototype.pop = function Deque$pop() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var i = (this._front + length - 1) & (this._capacity - 1);\n    var ret = this[i];\n    this[i] = void 0;\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.shift = function Deque$shift() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var front = this._front;\n    var ret = this[front];\n    this[front] = void 0;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.unshift = function Deque$unshift(item) {\n    var length = this._length;\n    var argsLength = arguments.length;\n\n\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = argsLength - 1; i >= 0; i--) {\n                this._checkCapacity(length + 1);\n                var capacity = this._capacity;\n                var j = (((( this._front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n                this._front = j;\n            }\n            return length;\n        }\n        else {\n            var front = this._front;\n            for (var i = argsLength - 1; i >= 0; i--) {\n                var j = (((( front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                front = j;\n            }\n            this._front = front;\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var capacity = this._capacity;\n    var i = (((( this._front - 1 ) &\n        ( capacity - 1) ) ^ capacity ) - capacity );\n    this[i] = item;\n    this._length = length + 1;\n    this._front = i;\n    return length + 1;\n};\n\nDeque.prototype.peekBack = function Deque$peekBack() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var index = (this._front + length - 1) & (this._capacity - 1);\n    return this[index];\n};\n\nDeque.prototype.peekFront = function Deque$peekFront() {\n    if (this._length === 0) {\n        return void 0;\n    }\n    return this[this._front];\n};\n\nDeque.prototype.get = function Deque$get(index) {\n    var i = index;\n    if ((i !== (i | 0))) {\n        return void 0;\n    }\n    var len = this._length;\n    if (i < 0) {\n        i = i + len;\n    }\n    if (i < 0 || i >= len) {\n        return void 0;\n    }\n    return this[(this._front + i) & (this._capacity - 1)];\n};\n\nDeque.prototype.isEmpty = function Deque$isEmpty() {\n    return this._length === 0;\n};\n\nDeque.prototype.clear = function Deque$clear() {\n    var len = this._length;\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        this[(front + j) & (capacity - 1)] = void 0;\n    }\n    this._length = 0;\n    this._front = 0;\n};\n\nDeque.prototype.toString = function Deque$toString() {\n    return this.toArray().toString();\n};\n\nDeque.prototype.valueOf = Deque.prototype.toString;\nDeque.prototype.removeFront = Deque.prototype.shift;\nDeque.prototype.removeBack = Deque.prototype.pop;\nDeque.prototype.insertFront = Deque.prototype.unshift;\nDeque.prototype.insertBack = Deque.prototype.push;\nDeque.prototype.enqueue = Deque.prototype.push;\nDeque.prototype.dequeue = Deque.prototype.shift;\nDeque.prototype.toJSON = Deque.prototype.toArray;\n\nObject.defineProperty(Deque.prototype, \"length\", {\n    get: function() {\n        return this._length;\n    },\n    set: function() {\n        throw new RangeError(\"\");\n    }\n});\n\nDeque.prototype._checkCapacity = function Deque$_checkCapacity(size) {\n    if (this._capacity < size) {\n        this._resizeTo(getCapacity(this._capacity * 1.5 + 16));\n    }\n};\n\nDeque.prototype._resizeTo = function Deque$_resizeTo(capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    if (front + length > oldCapacity) {\n        var moveItemsCount = (front + length) & (oldCapacity - 1);\n        arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n    }\n};\n\n\nvar isArray = Array.isArray;\n\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction pow2AtLeast(n) {\n    n = n >>> 0;\n    n = n - 1;\n    n = n | (n >> 1);\n    n = n | (n >> 2);\n    n = n | (n >> 4);\n    n = n | (n >> 8);\n    n = n | (n >> 16);\n    return n + 1;\n}\n\nfunction getCapacity(capacity) {\n    if (typeof capacity !== \"number\") {\n        if (isArray(capacity)) {\n            capacity = capacity.length;\n        }\n        else {\n            return 16;\n        }\n    }\n    return pow2AtLeast(\n        Math.min(\n            Math.max(16, capacity), 1073741824)\n    );\n}\n\nmodule.exports = Deque;\n"]},"metadata":{},"sourceType":"script"}