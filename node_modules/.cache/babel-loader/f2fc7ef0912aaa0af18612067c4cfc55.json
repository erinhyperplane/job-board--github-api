{"ast":null,"code":"import _slicedToArray from \"/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/src/jobs.js\";\nimport React, { useState } from 'react';\nimport Job from './job.js';\nimport JobBoard from './jobBoard.js';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Jobs({\n  jobs\n}) {\n  console.log('job is', jobs[0]); //modal\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Total number of jobs: \", jobs.length, \" \")), React.createElement(JobBoard, {\n    open: open,\n    job: selectedJob,\n    handleClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, jobs.map((job, i) => React.createElement(Job, {\n    key: i,\n    job: job,\n    onClick: () => {\n      console.log('clicked');\n      handleClickOpen();\n      selectJob();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n}\n\nexport default Jobs;","map":{"version":3,"sources":["/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/src/jobs.js"],"names":["React","useState","Job","JobBoard","Typography","Jobs","jobs","console","log","open","setOpen","handleClickOpen","handleClose","length","selectedJob","map","job","i","selectJob"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;;AAMA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAqB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAI,CAAC,CAAD,CAA1B,EADkB,CAGlB;;AAHkB,0BAION,KAAK,CAACC,QAAN,CAAe,KAAf,CAJP;AAAA;AAAA,QAIVQ,IAJU;AAAA,QAIJC,OAJI;;AAMjB,QAAMC,eAAe,GAAG,MAAM;AAC9BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFC;;AAIA,QAAME,WAAW,GAAG,MAAM;AAC1BF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFC;;AAGD,SACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAa,IAAA,SAAS,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAoDJ,IAAI,CAACO,MAAzD,MADJ,CADJ,EAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,IAAhB;AAAsB,IAAA,GAAG,EAAEK,WAA3B;AAAwC,IAAA,WAAW,EAAEF,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,CAACS,GAAL,CAAS,CAACC,GAAD,EAAKC,CAAL,KAAW,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,GAAG,EAAED,GAAlB;AAAuB,IAAA,OAAO,EAAE,MAAI;AACrDT,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAG,MAAAA,eAAe;AACfO,MAAAA,SAAS;AACZ,KAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADL,CALJ,CADD;AAgBF;;AAED,eAAeb,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Job from './job.js';\nimport JobBoard from './jobBoard.js';\nimport './App.css';\n\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\n\nfunction Jobs({jobs}){\n   console.log('job is', jobs[0]);\n   \n   //modal\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n    const handleClose = () => {\n    setOpen(false);\n  };\n   return(\n    <div className=\"jobs\">\n        <div>\n            <Typography  component='h2' >Total number of jobs: {jobs.length} </Typography>\n        </div>\n        <JobBoard open={open} job={selectedJob} handleClose={handleClose} />\n        <Typography>\n            {jobs.map((job,i) => <Job key={i} job={job} onClick={()=>{\n                console.log('clicked')\n                handleClickOpen();\n                selectJob();\n            }} />)}\n        </Typography>\n        \n    </div>\n   )\n}\n\nexport default Jobs;\n\n\n\n"]},"metadata":{},"sourceType":"module"}