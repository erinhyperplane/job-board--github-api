{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar assert = require('assert');\n\nvar RedisError = require('./redisError');\n\nvar ADD_STACKTRACE = false;\n\nfunction ParserError(message, buffer, offset) {\n  assert(buffer);\n  assert.strictEqual(typeof offset, 'number');\n  RedisError.call(this, message, ADD_STACKTRACE);\n  this.offset = offset;\n  this.buffer = buffer;\n  Error.captureStackTrace(this, ParserError);\n}\n\nutil.inherits(ParserError, RedisError);\nObject.defineProperty(ParserError.prototype, 'name', {\n  value: 'ParserError',\n  configurable: true,\n  writable: true\n});\nmodule.exports = ParserError;","map":{"version":3,"sources":["/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/node_modules/redis-parser/lib/parserError.js"],"names":["util","require","assert","RedisError","ADD_STACKTRACE","ParserError","message","buffer","offset","strictEqual","call","Error","captureStackTrace","inherits","Object","defineProperty","prototype","value","configurable","writable","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIG,cAAc,GAAG,KAArB;;AAEA,SAASC,WAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AAC7CN,EAAAA,MAAM,CAACK,MAAD,CAAN;AACAL,EAAAA,MAAM,CAACO,WAAP,CAAmB,OAAOD,MAA1B,EAAkC,QAAlC;AACAL,EAAAA,UAAU,CAACO,IAAX,CAAgB,IAAhB,EAAsBJ,OAAtB,EAA+BF,cAA/B;AACA,OAAKI,MAAL,GAAcA,MAAd;AACA,OAAKD,MAAL,GAAcA,MAAd;AACAI,EAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8BP,WAA9B;AACD;;AAEDL,IAAI,CAACa,QAAL,CAAcR,WAAd,EAA2BF,UAA3B;AAEAW,MAAM,CAACC,cAAP,CAAsBV,WAAW,CAACW,SAAlC,EAA6C,MAA7C,EAAqD;AACnDC,EAAAA,KAAK,EAAE,aAD4C;AAEnDC,EAAAA,YAAY,EAAE,IAFqC;AAGnDC,EAAAA,QAAQ,EAAE;AAHyC,CAArD;AAMAC,MAAM,CAACC,OAAP,GAAiBhB,WAAjB","sourcesContent":["'use strict'\n\nvar util = require('util')\nvar assert = require('assert')\nvar RedisError = require('./redisError')\nvar ADD_STACKTRACE = false\n\nfunction ParserError (message, buffer, offset) {\n  assert(buffer)\n  assert.strictEqual(typeof offset, 'number')\n  RedisError.call(this, message, ADD_STACKTRACE)\n  this.offset = offset\n  this.buffer = buffer\n  Error.captureStackTrace(this, ParserError)\n}\n\nutil.inherits(ParserError, RedisError)\n\nObject.defineProperty(ParserError.prototype, 'name', {\n  value: 'ParserError',\n  configurable: true,\n  writable: true\n})\n\nmodule.exports = ParserError\n"]},"metadata":{},"sourceType":"script"}