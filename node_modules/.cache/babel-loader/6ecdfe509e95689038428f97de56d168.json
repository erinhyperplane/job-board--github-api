{"ast":null,"code":"const express = require('express');\n\nconst app = express();\nconst port = 3001;\n\nvar redis = require(\"redis\"),\n    client = redis.createClient();\n\nconst _require = require('util'),\n      promisify = _require.promisify;\n\nconst getAsync = promisify(client.get).bind(client);\napp.get('/api/jobs', async (req, res) => {\n  console.log(\"getting jobs from redis\");\n  const jobs = await getAsync('github');\n  res.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n  return res.send(jobs);\n});\napp.listen(port, () => console.log(`Example app listening on port ${port}!`));","map":{"version":3,"sources":["/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/src/server.js"],"names":["express","require","app","port","redis","client","createClient","promisify","getAsync","get","bind","req","res","console","log","jobs","header","send","listen"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,MAAMG,IAAI,GAAG,IAAb;;AAEA,IAAIC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAnB;AAAA,IACII,MAAM,GAAGD,KAAK,CAACE,YAAN,EADb;;iBAGoBL,OAAO,CAAC,MAAD,C;MAApBM,S,YAAAA,S;;AACP,MAAMC,QAAQ,GAAGD,SAAS,CAACF,MAAM,CAACI,GAAR,CAAT,CAAsBC,IAAtB,CAA2BL,MAA3B,CAAjB;AAEAH,GAAG,CAACO,GAAJ,CAAQ,WAAR,EAAqB,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,QAAMC,IAAI,GAAG,MAAMP,QAAQ,CAAC,QAAD,CAA3B;AACAI,EAAAA,GAAG,CAACI,MAAJ,CAAW,6BAAX,EAA0C,uBAA1C;AACA,SAAOJ,GAAG,CAACK,IAAJ,CAASF,IAAT,CAAP;AACH,CALD;AAOAb,GAAG,CAACgB,MAAJ,CAAWf,IAAX,EAAiB,MAAMU,OAAO,CAACC,GAAR,CAAa,iCAAgCX,IAAK,GAAlD,CAAvB","sourcesContent":["const express = require('express')\nconst app = express()\nconst port = 3001\n\nvar redis = require(\"redis\"),\n    client = redis.createClient();\n\nconst {promisify} = require('util');\nconst getAsync = promisify(client.get).bind(client);\n\napp.get('/api/jobs', async (req, res) => {\n    console.log(\"getting jobs from redis\");\n    const jobs = await getAsync('github');\n    res.header(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\n    return res.send(jobs)\n})\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))"]},"metadata":{},"sourceType":"module"}