{"ast":null,"code":"'use strict';\n\nvar ReplyError = require('../lib/replyError');\n\nvar ParserError = require('../lib/parserError');\n/**\n * Parse data\n * @param parser\n * @returns {*}\n */\n\n\nfunction parseData(parser, data) {\n  try {\n    return parser.reader.get();\n  } catch (err) {\n    // Protocol errors land here\n    // Reset the parser. Otherwise new commands can't be processed properly\n    parser.reader = new hiredis.Reader(parser.options);\n    parser.returnFatalError(new ParserError(err.message, JSON.stringify(data), -1));\n  }\n}\n/**\n * Hiredis Parser\n * @param options\n * @constructor\n */\n\n\nfunction HiredisReplyParser(options) {\n  this.returnError = options.returnError;\n  this.returnFatalError = options.returnFatalError || options.returnError;\n  this.returnReply = options.returnReply;\n  this.name = 'hiredis';\n  this.options = {\n    return_buffers: !!options.returnBuffers\n  };\n  this.reader = new hiredis.Reader(this.options);\n}\n\nHiredisReplyParser.prototype.execute = function (data) {\n  this.reader.feed(data);\n  var reply = parseData(this, data);\n\n  while (reply !== undefined) {\n    if (reply && reply.name === 'Error') {\n      this.returnError(new ReplyError(reply.message));\n    } else {\n      this.returnReply(reply);\n    }\n\n    reply = parseData(this, data);\n  }\n};\n/**\n * Reset the parser values to the initial state\n *\n * @returns {undefined}\n */\n\n\nHiredisReplyParser.prototype.reset = function () {\n  this.reader = new hiredis.Reader(this.options);\n};\n\nmodule.exports = HiredisReplyParser;","map":{"version":3,"sources":["/Users/erinx/code/hyperplaneReact/road-to-react/js-job-board-diy/node_modules/redis-parser/lib/hiredis.js"],"names":["ReplyError","require","ParserError","parseData","parser","data","reader","get","err","hiredis","Reader","options","returnFatalError","message","JSON","stringify","HiredisReplyParser","returnError","returnReply","name","return_buffers","returnBuffers","prototype","execute","feed","reply","undefined","reset","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAAzB;AAEA;;;;;;;AAKA,SAASE,SAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAChC,MAAI;AACF,WAAOD,MAAM,CAACE,MAAP,CAAcC,GAAd,EAAP;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ;AACA;AACAJ,IAAAA,MAAM,CAACE,MAAP,GAAgB,IAAIG,OAAO,CAACC,MAAZ,CAAmBN,MAAM,CAACO,OAA1B,CAAhB;AACAP,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,IAAIV,WAAJ,CAAgBM,GAAG,CAACK,OAApB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAA7B,EAAmD,CAAC,CAApD,CAAxB;AACD;AACF;AAED;;;;;;;AAKA,SAASW,kBAAT,CAA6BL,OAA7B,EAAsC;AACpC,OAAKM,WAAL,GAAmBN,OAAO,CAACM,WAA3B;AACA,OAAKL,gBAAL,GAAwBD,OAAO,CAACC,gBAAR,IAA4BD,OAAO,CAACM,WAA5D;AACA,OAAKC,WAAL,GAAmBP,OAAO,CAACO,WAA3B;AACA,OAAKC,IAAL,GAAY,SAAZ;AACA,OAAKR,OAAL,GAAe;AACbS,IAAAA,cAAc,EAAE,CAAC,CAACT,OAAO,CAACU;AADb,GAAf;AAGA,OAAKf,MAAL,GAAc,IAAIG,OAAO,CAACC,MAAZ,CAAmB,KAAKC,OAAxB,CAAd;AACD;;AAEDK,kBAAkB,CAACM,SAAnB,CAA6BC,OAA7B,GAAuC,UAAUlB,IAAV,EAAgB;AACrD,OAAKC,MAAL,CAAYkB,IAAZ,CAAiBnB,IAAjB;AACA,MAAIoB,KAAK,GAAGtB,SAAS,CAAC,IAAD,EAAOE,IAAP,CAArB;;AAEA,SAAOoB,KAAK,KAAKC,SAAjB,EAA4B;AAC1B,QAAID,KAAK,IAAIA,KAAK,CAACN,IAAN,KAAe,OAA5B,EAAqC;AACnC,WAAKF,WAAL,CAAiB,IAAIjB,UAAJ,CAAeyB,KAAK,CAACZ,OAArB,CAAjB;AACD,KAFD,MAEO;AACL,WAAKK,WAAL,CAAiBO,KAAjB;AACD;;AACDA,IAAAA,KAAK,GAAGtB,SAAS,CAAC,IAAD,EAAOE,IAAP,CAAjB;AACD;AACF,CAZD;AAcA;;;;;;;AAKAW,kBAAkB,CAACM,SAAnB,CAA6BK,KAA7B,GAAqC,YAAY;AAC/C,OAAKrB,MAAL,GAAc,IAAIG,OAAO,CAACC,MAAZ,CAAmB,KAAKC,OAAxB,CAAd;AACD,CAFD;;AAIAiB,MAAM,CAACC,OAAP,GAAiBb,kBAAjB","sourcesContent":["'use strict'\n\nvar ReplyError = require('../lib/replyError')\nvar ParserError = require('../lib/parserError')\n\n/**\n * Parse data\n * @param parser\n * @returns {*}\n */\nfunction parseData (parser, data) {\n  try {\n    return parser.reader.get()\n  } catch (err) {\n    // Protocol errors land here\n    // Reset the parser. Otherwise new commands can't be processed properly\n    parser.reader = new hiredis.Reader(parser.options)\n    parser.returnFatalError(new ParserError(err.message, JSON.stringify(data), -1))\n  }\n}\n\n/**\n * Hiredis Parser\n * @param options\n * @constructor\n */\nfunction HiredisReplyParser (options) {\n  this.returnError = options.returnError\n  this.returnFatalError = options.returnFatalError || options.returnError\n  this.returnReply = options.returnReply\n  this.name = 'hiredis'\n  this.options = {\n    return_buffers: !!options.returnBuffers\n  }\n  this.reader = new hiredis.Reader(this.options)\n}\n\nHiredisReplyParser.prototype.execute = function (data) {\n  this.reader.feed(data)\n  var reply = parseData(this, data)\n\n  while (reply !== undefined) {\n    if (reply && reply.name === 'Error') {\n      this.returnError(new ReplyError(reply.message))\n    } else {\n      this.returnReply(reply)\n    }\n    reply = parseData(this, data)\n  }\n}\n\n/**\n * Reset the parser values to the initial state\n *\n * @returns {undefined}\n */\nHiredisReplyParser.prototype.reset = function () {\n  this.reader = new hiredis.Reader(this.options)\n}\n\nmodule.exports = HiredisReplyParser\n"]},"metadata":{},"sourceType":"script"}